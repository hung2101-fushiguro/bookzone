package controller;

import java.io.IOException;
import java.net.URLDecoder;
import java.net.URLEncoder;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;

import model.User;
import service.UserService;

@WebServlet(name = "LoginServlet", urlPatterns = {"/login"})
public class LoginServlet extends HttpServlet {

    private static final long serialVersionUID = 1L;
    private UserService userService;

    @Override
    public void init() throws ServletException {
        userService = new UserService(); // kh·ªüi t·∫°o DAO
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // ƒê·ªçc cookie "rememberMe" n·∫øu c√≥
        Cookie[] cookies = request.getCookies();
        String rememberedEmail = null;

        if (cookies != null) {
            for (Cookie cookie : cookies) {
                if ("rememberMe".equals(cookie.getName())) {
                    rememberedEmail = URLDecoder.decode(cookie.getValue(), "UTF-8");
                    break;
                }
            }
        }

        // üÜï ƒê·ªçc redirect n·∫øu c√≥
        String redirect = request.getParameter("redirect");
        request.setAttribute("redirect", redirect);

        request.setAttribute("rememberedEmail", rememberedEmail);
        request.getRequestDispatcher("user/loginUser.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String email = request.getParameter("email");
        String password = request.getParameter("password");
        String rememberMe = request.getParameter("rememberMe");
        String redirect = request.getParameter("redirect"); // üÜï l·∫•y tham s·ªë redirect n·∫øu c√≥

        User user = userService.checkLogin(email, password);

        if (user == null) {
            request.setAttribute("errorMessage", "Sai email ho·∫∑c m·∫≠t kh·∫©u");
            request.setAttribute("redirect", redirect); // gi·ªØ l·∫°i redirect ƒë·ªÉ form hi·ªÉn th·ªã l·∫°i n·∫øu ƒëƒÉng nh·∫≠p sai
            request.getRequestDispatcher("user/loginUser.jsp").forward(request, response);
            return;
        }

        // X·ª≠ l√Ω "Remember Me"
        Cookie cookie;
        if ("on".equals(rememberMe)) {
            cookie = new Cookie("rememberMe", URLEncoder.encode(email, "UTF-8"));
            cookie.setMaxAge(60 * 60 * 24 * 7); // 7 ng√†y
        } else {
            cookie = new Cookie("rememberMe", null);
            cookie.setMaxAge(0); // x√≥a cookie
        }
        response.addCookie(cookie);

        // L∆∞u user v√†o session
        HttpSession session = request.getSession();
        session.setMaxInactiveInterval(60 * 5);
        session.setAttribute("user", user);

        // Ph√¢n quy·ªÅn v√† ƒëi·ªÅu h∆∞·ªõng
        String role = user.getRole();
        if ("admin".equalsIgnoreCase(role)) {
            response.sendRedirect("admin/admin.jsp");
        } else {
            // N·∫øu c√≥ redirect URL ‚Üí chuy·ªÉn v·ªÅ l·∫°i ƒë√≥, ng∆∞·ª£c l·∫°i th√¨ v·ªÅ home
            if (redirect != null && !redirect.isEmpty()) {
                response.sendRedirect(redirect);
            } else {
                response.sendRedirect("home");
            }
        }
    }

    @Override
    public String getServletInfo() {
        return "Servlet x·ª≠ l√Ω ƒëƒÉng nh·∫≠p ng∆∞·ªùi d√πng c√≥ Remember Me v√† ph√¢n quy·ªÅn";
    }
}